import os
from flask import Flask, request
import telebot
import yt_dlp
import json

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
BOT_TOKEN = os.environ.get("BOT_TOKEN")  # –•—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
SECRET_TOKEN = os.environ.get("SECRET_TOKEN")  # –°–µ–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –≤–µ–±—Ö—É–∫–∞
CHANNEL_LINK = "https://t.me/zametochkysani"
FREE_DOWNLOAD_LIMIT = 3

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

COUNTERS_FILE = "user_counters.json"

if os.path.exists(COUNTERS_FILE):
    with open(COUNTERS_FILE, "r") as f:
        user_counters = json.load(f)
else:
    user_counters = {}

def save_counters():
    with open(COUNTERS_FILE, "w") as f:
        json.dump(user_counters, f)

@app.route(f"/{BOT_TOKEN}", methods=['POST'])
def webhook():
    if request.headers.get('X-Telegram-Bot-Api-Secret-Token') != SECRET_TOKEN:
        return "Unauthorized", 403
    json_str = request.get_data().decode('UTF-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return '', 200

@app.route("/", methods=['GET'])
def index():
    return "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ webhook!", 200

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
def main_menu(chat_id):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üì© –†–µ–∫–ª–∞–º–∞/–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ", "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.row("üîó –°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π")
    bot.send_message(chat_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=markup)

@bot.message_handler(commands=['start'])
def start(message):
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —Å TikTok –±–µ–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤.\n"
        f"‚ö†Ô∏è –ü–µ—Ä–≤—ã–µ {FREE_DOWNLOAD_LIMIT} —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã.\n"
        f"–ü–æ—Å–ª–µ —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:\n{CHANNEL_LINK}\n\n"
        "–ü–æ–µ—Ö–∞–ª–∏! üöÄ"
    )
    bot.send_message(message.chat.id, welcome_text)
    main_menu(message.chat.id)

@bot.message_handler(func=lambda message: True)
def download_video(message):
    user_id = str(message.from_user.id)
    url = message.text.strip()

    if "tiktok.com" not in url:
        bot.send_message(message.chat.id, "‚ùå –û—Ç–ø—Ä–∞–≤—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ TikTok.")
        return

    count = user_counters.get(user_id, 0)

    if count >= FREE_DOWNLOAD_LIMIT:
        bot.send_message(
            message.chat.id,
            f"üö´ –õ–∏–º–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–∫–∞—á–∏–≤–∞–Ω–∏–π ({FREE_DOWNLOAD_LIMIT}) –¥–æ—Å—Ç–∏–≥–Ω—É—Ç.\n"
            f"–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:\n{CHANNEL_LINK}"
        )
        return

    bot.send_message(message.chat.id, "‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏...")

    try:
        ydl_opts = {
            'format': 'bestvideo+bestaudio/best',
            'outtmpl': 'downloads/video.%(ext)s',
            'noplaylist': True,
            'merge_output_format': 'mp4',
            'quiet': True,
            'no_warnings': True,
        }
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)

        with open(filename, "rb") as f:
            bot.send_video(message.chat.id, f)

        os.remove(filename)

        user_counters[user_id] = count + 1
        save_counters()

        if user_counters[user_id] == FREE_DOWNLOAD_LIMIT:
            bot.send_message(
                message.chat.id,
                f"‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –≤—Å–µ {FREE_DOWNLOAD_LIMIT} –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.\n"
                f"–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª:\n{CHANNEL_LINK}"
            )

    except Exception as e:
        print(f"[ERROR] User {user_id}: {e}")
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")

if __name__ == "__main__":
    bot.remove_webhook()
    WEBHOOK_URL = f"https://{os.environ.get('RENDER_EXTERNAL_HOSTNAME')}/{BOT_TOKEN}"
    bot.set_webhook(url=WEBHOOK_URL, secret_token=SECRET_TOKEN)
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
