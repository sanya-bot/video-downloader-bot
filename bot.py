import os
import json
from flask import Flask, request
import telebot
from telebot import types
import yt_dlp

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
BOT_TOKEN = "8289812320:AAHSGU3hsumhw525yH9NNBawhVxvRjxd0Jo"
CHANNEL_LINK = "https://t.me/zametochkysani"
CONTACT = "@ssanyaFG"
FREE_DOWNLOAD_LIMIT = 3

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

COUNTERS_FILE = "user_counters.json"
if os.path.exists(COUNTERS_FILE):
    with open(COUNTERS_FILE, "r") as f:
        user_counters = json.load(f)
else:
    user_counters = {}

def save_counters():
    with open(COUNTERS_FILE, "w") as f:
        json.dump(user_counters, f)

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üì• –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ TikTok")
    markup.row("‚ùì –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è / FAQ", "‚Ñπ –û –±–æ—Ç–µ")
    markup.row("üíå –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", "üîó –ú–æ–π –∫–∞–Ω–∞–ª")
    return markup

# --- Flask webhook ---
@app.route(f"/{BOT_TOKEN}", methods=['POST'])
def webhook():
    json_str = request.get_data().decode('UTF-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return '', 200

@app.route("/", methods=['GET'])
def index():
    return "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!", 200

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@bot.message_handler(commands=['start'])
def start(message):
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —Å TikTok –±–µ–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤.\n"
        f"‚ö† –ü–µ—Ä–≤—ã–µ {FREE_DOWNLOAD_LIMIT} —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã.\n"
        "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ—Å–ª–µ –ª–∏–º–∏—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª."
    )
    bot.send_message(message.chat.id, welcome_text, reply_markup=main_menu())

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ---
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_id = str(message.from_user.id)
    text = message.text.strip()

    if text == "üì• –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ TikTok":
        msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ TikTok:")
        bot.register_next_step_handler(msg, download_tiktok)
    elif text == "‚ùì –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è / FAQ":
        bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ TikTok, –∏ —è –ø—Ä–∏—à–ª—é –≤–∏–¥–µ–æ –±–µ–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤.", reply_markup=main_menu())
    elif text == "‚Ñπ –û –±–æ—Ç–µ":
        bot.send_message(message.chat.id, "–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –°–∞–Ω–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è TikTok.\n–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–∫–∞—á–∏–≤–∞–Ω–∏–π: –ø–µ—Ä–≤—ã–µ 3 –≤–∏–¥–µ–æ.", reply_markup=main_menu())
    elif text == "üíå –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å":
        bot.send_message(message.chat.id, f"–ù–∞–ø–∏—à–∏ –º–Ω–µ –∑–¥–µ—Å—å: {CONTACT}", reply_markup=main_menu())
    elif text == "üîó –ú–æ–π –∫–∞–Ω–∞–ª":
        bot.send_message(message.chat.id, f"–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –∫–∞–Ω–∞–ª: {CHANNEL_LINK}", reply_markup=main_menu())
    else:
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é ‚¨áÔ∏è", reply_markup=main_menu())

# --- –°–∫–∞—á–∏–≤–∞–Ω–∏–µ TikTok ---
def download_tiktok(message):
    user_id = str(message.from_user.id)
    url = message.text.strip()

    if "tiktok.com" not in url:
        bot.send_message(message.chat.id, "‚ùå –≠—Ç–æ –Ω–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ TikTok. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.", reply_markup=main_menu())
        return

    count = user_counters.get(user_id, 0)
    if count >= FREE_DOWNLOAD_LIMIT:
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=CHANNEL_LINK))
        bot.send_message(message.chat.id, f"üö´ –õ–∏–º–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–∫–∞—á–∏–≤–∞–Ω–∏–π ({FREE_DOWNLOAD_LIMIT}) –¥–æ—Å—Ç–∏–≥–Ω—É—Ç.", reply_markup=markup)
        return

    bot.send_message(message.chat.id, "‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")

    try:
        ydl_opts = {
            'format': 'bestvideo+bestaudio/best',
            'outtmpl': 'video.%(ext)s',
            'noplaylist': True,
            'merge_output_format': 'mp4',
            'quiet': True,
            'no_warnings': True
        }
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)

        with open(filename, "rb") as f:
            bot.send_video(message.chat.id, f)

        os.remove(filename)

        # –°—á—ë—Ç—á–∏–∫ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        user_counters[user_id] = count + 1
        save_counters()

        if user_counters[user_id] == FREE_DOWNLOAD_LIMIT:
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=CHANNEL_LINK))
            bot.send_message(message.chat.id, f"‚úÖ –¢—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –≤—Å–µ {FREE_DOWNLOAD_LIMIT} –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª:", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, f"‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –æ—Å—Ç–∞–ª–æ—Å—å: {FREE_DOWNLOAD_LIMIT - user_counters[user_id]}", reply_markup=main_menu())

    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}", reply_markup=main_menu())

# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    bot.remove_webhook()
    WEBHOOK_URL = f"https://{os.environ.get('RENDER_EXTERNAL_HOSTNAME')}/{BOT_TOKEN}"
    bot.set_webhook(url=WEBHOOK_URL)
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
